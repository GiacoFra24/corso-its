openapi: 3.0.0
info:
  title: Documentazione GDR Node
  version: 1.0.0
  description: API Documentation of our gdr
paths:
  /attribute:
    get:
      summary: Retrieve all attributes
      tags:
        - Attribute
      responses:
        "200":
          description: Attribute list retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Attribute"
        "500":
          description: Server error
    post:
      summary: Create a new attribute
      tags:
        - Attribute
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                key:
                  type: string
                value:
                  type: string
      responses:
        "201":
          description: Attribute created successfully
        "400":
          description: Validation error
        "500":
          description: Server error
  "/attribute/{id}":
    get:
      summary: Retrieve a single attribute
      tags:
        - Attribute
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Attribute successfully retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Attribute"
        "404":
          description: Attribute not found
        "500":
          description: Server error
    put:
      summary: Update an existing attribute
      tags:
        - Attribute
      parameters:
        - in: path
          name: id
          required: true
          description: ID dell'attributo da aggiornare
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                key:
                  type: string
                value:
                  type: string
      responses:
        "200":
          description: Attribute updated successfully
        "404":
          description: Attribute not found
        "500":
          description: Server error
    delete:
      summary: Delete an attribute
      tags:
        - Attribute
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the attribute to delete
          schema:
            type: string
      responses:
        "200":
          description: Attribute successfully deleted
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Attribute"
        "404":
          description: Attribute not found
        "500":
          description: Server error
  /class:
    get:
      summary: Ottieni tutte le classi
      tags:
        - Classes
      responses:
        "200":
          description: Lista di tutte le classi
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Class"
        "500":
          description: Errore interno del server
    post:
      summary: Crea una nuova classe
      tags:
        - Classes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClassInput"
      responses:
        "201":
          description: Classe creata con successo
        "400":
          description: Dati non validi
        "500":
          description: Errore interno del server
  "/class/{id}":
    get:
      summary: Ottieni una classe per ID
      tags:
        - Classes
      parameters:
        - in: path
          name: id
          required: true
          description: ID della classe
          schema:
            type: string
      responses:
        "200":
          description: Dettagli della classe
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Class"
        "404":
          description: Classe non trovata
        "500":
          description: Errore interno del server
    patch:
      summary: Aggiorna una classe esistente
      tags:
        - Classes
      parameters:
        - in: path
          name: id
          required: true
          description: ID della classe da aggiornare
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Class"
      responses:
        "200":
          description: Classe aggiornata con successo
        "400":
          description: Dati non validi
        "404":
          description: Classe non trovata
        "500":
          description: Errore interno del server
    delete:
      summary: Elimina una classe
      tags:
        - Classes
      parameters:
        - in: path
          name: id
          required: true
          description: ID della classe da eliminare
          schema:
            type: string
      responses:
        "200":
          description: Classe eliminata con successo
        "404":
          description: Classe non trovata
        "500":
          description: Errore interno del server
  /class/skill/mod:
    get:
      summary: Retrieve all class/skill mods
      description: Returns a list of all class/skill modifications
      tags:
        - Class Skill Modifications
      responses:
        "201":
          description: Class/skill mods retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/ClassSkillMod"
                  message:
                    type: string
                    example: Class/skill mods retrieved successfully
        "401":
          description: Unauthorized - User not authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden - User does not have admin role
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/class/{idClass}/skill/{idSkill}":
    post:
      summary: Create a new class/skill modification
      description: Creates a new modification value for a specific class and skill
        combination
      tags:
        - Class Skill Modifications
      parameters:
        - in: path
          name: idClass
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the class
        - in: path
          name: idSkill
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the skill
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClassSkillModInput"
      responses:
        "201":
          description: Class/skill mod created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Class/skill mod created successfully
                  data:
                    $ref: "#/components/schemas/ClassSkillMod"
        "400":
          description: Bad request - Missing required parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized - User not authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden - User does not have admin role
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      summary: Retrieve a single class/skill modification
      description: Returns a specific class/skill modification by class ID and skill ID
      tags:
        - Class Skill Modifications
      parameters:
        - in: path
          name: idClass
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the class
        - in: path
          name: idSkill
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the skill
      responses:
        "201":
          description: Class/skill mod retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClassSkillMod"
        "400":
          description: Bad request - Missing required parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized - User not authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden - User does not have admin role
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not found - Class/skill modification not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      summary: Update a class/skill modification
      description: Updates the value of a specific class/skill modification
      tags:
        - Class Skill Modifications
      parameters:
        - in: path
          name: idClass
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the class
        - in: path
          name: idSkill
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the skill
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClassSkillModInput"
      responses:
        "201":
          description: Class/skill modification updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Class/skill modification updated successfully
                  data:
                    $ref: "#/components/schemas/ClassSkillMod"
        "400":
          description: Bad request - Missing required parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized - User not authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden - User does not have admin role
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not found - Class/skill modification not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete a class/skill modification
      description: Deletes a specific class/skill modification by class ID and skill ID
      tags:
        - Class Skill Modifications
      parameters:
        - in: path
          name: idClass
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the class
        - in: path
          name: idSkill
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the skill
      responses:
        "201":
          description: Class/skill modification deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Class/skill modification deleted successfully
                  data:
                    $ref: "#/components/schemas/ClassSkillMod"
        "401":
          description: Unauthorized - User not authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden - User does not have admin role
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not found - Class/skill modification not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/class/{idClass}/skill":
    get:
      summary: Retrieve skills for a specific class
      description: Returns all skills associated with a specific class and their
        modification values
      tags:
        - Class Skill Modifications
      parameters:
        - in: path
          name: idClass
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the class
      responses:
        "201":
          description: Class skills retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    idSkill:
                      type: string
                      format: uuid
                    idClass:
                      type: string
                      format: uuid
                    value:
                      type: integer
                    skill:
                      $ref: "#/components/schemas/Skill"
        "401":
          description: Unauthorized - User not authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden - User does not have admin role
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not found - Class not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /race/attr/mod:
    get:
      summary: Retrieve all Race Attribute Modifiers
      description: Get a list of all race attribute modifiers stored in the system.
      tags:
        - Race Attribude Mode
      responses:
        "200":
          description: Successfully retrieved all race attribute modifiers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RaceAttribute"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          description: Internal server error
  "/race/{idRace}/attr/{idAttribute}":
    get:
      summary: Get a specific Race Attribute Modifier
      description: Retrieves a single Race Attribute Modifier based on Race and
        Attribute IDs.
      tags:
        - Race Attribude Mode
      parameters:
        - in: path
          name: idRace
          required: true
          schema:
            type: string
          description: The ID of the race
        - in: path
          name: idAttribute
          required: true
          schema:
            type: string
          description: The ID of the attribute
      responses:
        "200":
          description: The requested Race Attribute Modifier
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RaceAttrMod"
        "400":
          description: Bad request, missing parameters
        "401":
          description: Unauthorized operation
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: Race Attribute Modifier not found
        "500":
          description: Internal server error
    post:
      summary: Create a new Race Attribute Modifier
      description: Creates a new modifier linking a race to an attribute with a given value.
      tags:
        - Race Attribude Mode
      parameters:
        - in: path
          name: idRace
          required: true
          schema:
            type: string
        - in: path
          name: idAttribute
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                value:
                  type: integer
                  description: The modifier value
      responses:
        "201":
          description: Race Attribute Modifier created successfully
        "400":
          description: Bad request, missing parameters
        "401":
          description: Unauthorized operation
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          description: Internal server error
    patch:
      summary: Update a Race Attribute Modifier
      description: Updates the value of an existing Race Attribute Modifier.
      tags:
        - Race Attribude Mode
      parameters:
        - in: path
          name: idRace
          required: true
          schema:
            type: string
        - in: path
          name: idAttribute
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                value:
                  type: integer
                  description: The updated modifier value
      responses:
        "200":
          description: Race Attribute Modifier updated successfully
        "400":
          description: Bad request, missing parameters
        "401":
          description: Unauthorized operation
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          description: Internal server error
    delete:
      summary: Delete a Race Attribute Modifier
      description: Deletes an existing Race Attribute Modifier based on Race and
        Attribute IDs.
      tags:
        - Race Attribude Mode
      parameters:
        - in: path
          name: idRace
          required: true
          schema:
            type: string
        - in: path
          name: idAttribute
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Race Attribute Modifier deleted successfully
        "400":
          description: Bad request, missing parameters
        "401":
          description: Unauthorized operation
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          description: Internal server error
  "/race/{idRace}/attr":
    get:
      summary: Get a Race with its relative attributes
      description: Retrieve the attributes associated with a specific Race by its ID.
      tags:
        - Race Attribude Mode
      parameters:
        - in: path
          name: idRace
          required: true
          description: ID of the Race to retrieve attributes for
          schema:
            type: string
      responses:
        "200":
          description: Successfully retrieved race attributes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RaceAttribute"
        "400":
          description: Bad request, missing or invalid parameters
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: Race not found
        "500":
          description: Internal server error
  /skill:
    get:
      summary: Retrieve all skills
      tags:
        - Skill
      responses:
        "200":
          description: A list of skills.
        "500":
          description: Internal server error.
    post:
      summary: Create a new skill
      tags:
        - Skill
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                key:
                  type: string
                value:
                  type: integer
                idAttribute:
                  type: string
      responses:
        "201":
          description: Skill created.
        "500":
          description: Internal server error.
  "/skill/{id}":
    get:
      summary: Get a single skill
      tags:
        - Skill
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Skill found.
        "404":
          description: Skill not found.
        "500":
          description: Internal server error.
    patch:
      summary: Update a skill
      tags:
        - Skill
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                key:
                  type: string
                value:
                  type: integer
                idAttribute:
                  type: string
      responses:
        "200":
          description: Skill updated.
        "500":
          description: Internal server error.
    delete:
      summary: Delete a skill
      tags:
        - Skill
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Skill deleted.
        "500":
          description: Internal server error.
components:
  schemas:
    Attribute:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique ID of the attribute
        name:
          type: string
          description: Attribute name
        key:
          type: string
          description: Unique attribute key
        value:
          type: string
          description: Attribute value
        createdAt:
          type: string
          format: date-time
          description: Attribute creation date
        updatedAt:
          type: string
          format: date-time
          description: Last modified date of the attribute
    Class:
      type: object
      required:
        - name
        - key
        - description
      properties:
        id:
          type: string
          description: L'ID univoco della classe
        name:
          type: string
          description: Il nome della classe
        key:
          type: string
          description: La chiave univoca della classe
        description:
          type: string
          description: Descrizione della classe
        createdAt:
          type: string
          format: date-time
          description: La data di creazione della classe
        updatedAt:
          type: string
          format: date-time
          description: La data dell'ultimo aggiornamento della classe
    ClassInput:
      type: object
      required:
        - name
        - key
        - description
      properties:
        name:
          type: string
          description: Il nome della classe
        key:
          type: string
          description: La chiave univoca della classe
        description:
          type: string
          description: Descrizione della classe
        createdAt:
          type: string
          format: date-time
          description: La data di creazione della classe
        updatedAt:
          type: string
          format: date-time
          description: La data dell'ultimo aggiornamento della classe
    Error:
      type: string
    ClassSkillMod:
      type: object
      properties:
        idSkill:
          type: string
          format: uuid
        idClass:
          type: string
          format: uuid
        value:
          type: integer
    ClassSkillModInput:
      type: object
      properties:
        value:
          type: integer
      required:
        - value
    RaceAttributeMode:
      type: object
      properties:
        idRace:
          type: string
          format: uuid
          description: The ID of the race
        idAttribute:
          type: string
          format: uuid
          description: The ID of the attribute
        value:
          type: integer
          description: The modifier value for the attribute
      required:
        - idRace
        - idAttribute
        - value
    securitySchemes:
      cookieAuth:
        type: apiKey
        in: cookie
        name: sessionId
    responses:
      UnauthorizedError:
        description: Access token is missing or invalid
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: Unauthorized access
tags:
  - name: Attribute
    description: API for managing attributes
  - name: Classes
    description: API per la gestione delle classi
  - name: Me (User Profile)
    description: User profile information
